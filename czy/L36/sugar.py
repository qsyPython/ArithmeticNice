# 给定一个偶数长度的数组，其中不同的数字代表着不同种类的糖果，每一个数字代表一个糖果。你需要把这些糖果平均分给一个弟弟和一个妹妹。返回妹妹可以获得的最大糖果的种类数。
#
# 示例 1:
#
# 输入: candies = [1,1,2,2,3,3]
# 输出: 3
# 解析: 一共有三种种类的糖果，每一种都有两个。
#      最优分配方案：妹妹获得[1,2,3],弟弟也获得[1,2,3]。这样使妹妹获得糖果的种类数最多。
# 示例 2 :
#
# 输入: candies = [1,1,2,3]
# 输出: 2
# 解析: 妹妹获得糖果[2,3],弟弟获得糖果[1,1]，妹妹有两种不同的糖果，弟弟只有一种。这样使得妹妹可以获得的糖果种类数最多。
# 注意:
#
# 数组的长度为[2, 10,000]，并且确定为偶数。
# 数组中数字的大小在范围[-100,000, 100,000]内。

#本题最重要的是思路的转化，我们要找妹妹可以获取的糖果最多的种类数量，
# 那么我们只需要知道糖果总的种类数量，由于弟弟妹妹平分偶数个糖果，
# 那么我们比较糖果总的种类数量和每个人可以获取的糖果数量，如果种类数较多，妹妹获取的糖果每个都可以不同。
# 如果种类数较少，那么妹妹每种糖果都可以获得一颗。



def distributeCandies(candies):
    size = len(candies)
    if size > 0 and size%2 == 0:
        temp = candies
        i = 0
        while i < size:
            k = i + 1
            while k < len(temp):
                if temp[i] == temp[k]:
                    del temp[i]
                k += 1
            i += 1
        if len(temp) <= int(size / 2):  # 妹妹每种糖果都可以拿到一个
            return len(temp)
        elif len(temp) > int(size / 2):
            return int(size / 2)
    else:
        return None


if __name__ == '__main__':

    print(distributeCandies([1,1,2,2,3,3]))




